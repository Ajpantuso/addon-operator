name: Testing

on:
  workflow_dispatch:
  push:
    branches:
    - main
  pull_request:

concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  lint-and-unit:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: '>=1.18.0'

    - uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Lint
      run: ./mage test:lint

    - name: Unit
      run: ./mage test:unit

  integration:
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: '>=1.18.0'

    - uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Test environment boostrap
      run: ./mage dev:setup
      env:
        CONTAINER_RUNTIME: docker

    - name: Setup monitoring stack
      run: |
        set -e
        export KUBECONFIG=$GITHUB_WORKSPACE/.cache/dev-env/kubeconfig.yaml
        make setup-monitoring
      env:
        CONTAINER_RUNTIME: docker
      continue-on-error: true

    - name: Deploy the mock and all
      run: ./mage dev:deploy
      env:
        CONTAINER_RUNTIME: docker
        ENABLE_API_MOCK: "true"
        ENABLE_PROMETHEUS_REMOTE_STORAGE_MOCK: "true"
        ENABLE_WEBHOOK: "true"

    - name: Integration test
      run: export KUBECONFIG=$GITHUB_WORKSPACE/.cache/dev-env/kubeconfig.yaml && ./mage test:integration
      env:
        CONTAINER_RUNTIME: docker
